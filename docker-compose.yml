services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: deen-hidaya-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-deen_hidaya}
      POSTGRES_USER: ${POSTGRES_USER:-deen_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_this_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-deen_user} -d ${POSTGRES_DB:-deen_hidaya}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - deen-hidaya-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: deen-hidaya-backend
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-deen_hidaya}
      POSTGRES_USER: ${POSTGRES_USER:-deen_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_this_password}
      BACKEND_PORT: ${BACKEND_PORT:-8000}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - deen-hidaya-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: deen-hidaya-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - deen-hidaya-network

volumes:
  postgres_data:

networks:
  deen-hidaya-network:
    driver: bridge
